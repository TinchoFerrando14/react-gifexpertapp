{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","addCategory","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respose","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","gif","GifExpertApp","props","categories","setCategories","newCategory","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAECC,mBAAS,cAFV,mBAE5BC,EAF4B,KAEhBC,EAFgB,KAiBnC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC3BR,EAAYE,GACZC,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAlBc,SAACN,GACvBF,EAAcE,EAAMO,OAAOF,a,QCNtBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,sBAAKC,UAAU,uBAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCLHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEmCO,UAAUF,GAF7C,+DAIGG,MAAMR,GAJT,cAIbS,EAJa,gBAKEA,EAAQC,OALV,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAGc,EAAIC,cAAP,aAAG,EAAYC,iBAAiBhB,QAXxB,kBAeZY,GAfY,4CAAH,sDC8BLK,EA1BC,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAc,IAAD,EACZpB,mBAAS,CAC/B2B,KAAK,GACLM,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAVAC,qBAAY,WACRjB,EAAQC,GACPiB,MAAK,SAAAV,GAAI,OAAIQ,EAAS,CACnBR,KAAMA,EACNM,SAAS,SAIf,CAACb,IAEIc,EDbgBI,CAAalB,GAA7Ba,EAFqB,EAErBA,QAAQN,EAFa,EAEbA,KAEf,OACI,qCACI,6BAAKP,IACJa,GAAW,cACZ,qBAAKjB,UAAW,YAAhB,SAEQW,EAAKC,KAAI,SAACW,GAAD,OACL,cAAC,EAAD,eAEQA,GADGA,EAAI1B,aEoBxB2B,EAhCM,SAAAC,GAAS,MAIUzC,mBAAS,CAAC,cAJpB,mBAInB0C,EAJmB,KAIPC,EAJO,KAU1B,OAAQ,qCACJ,8CACA,uBACA,cAAC,EAAD,CAAa5C,YAPG,SAAC6C,GACjBD,EAAc,CAACC,GAAF,mBAAiBF,QAO9B,6BAEQA,EAAWd,KAAI,SAACR,GAAD,OACX,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MClB3ByB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0643bdfe.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({addCategory}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('hola mundo');\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();   \r\n        \r\n        if (inputValue.trim().length > 2) {\r\n            addCategory(inputValue);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    addCategory: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className='animate__slideInDown'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async (category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ECwQqy1YB8v5LccVSykUMjvUR0W8tk0L`;\r\n\r\n    const respose = await fetch(url);\r\n    const {data} = await respose.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{ \r\n            id: img.id,\r\n            title: img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {loading,gifs} = useFetchGifs(category);\r\n  \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>    \r\n            {loading && 'Cargando...'}\r\n            <div className= \"card-grid\">                    \r\n                {\r\n                    gifs.map((gif) =>(\r\n                        <GifGridItem \r\n                            key = {gif.id}\r\n                            {...gif}       \r\n                        />\r\n                    ))\r\n                } \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        gifs:[],\r\n        loading: true\r\n    });\r\n\r\n    //llama a getGifs solo una única vez por más que se actualice el component\r\n    useEffect ( () => {\r\n        getGifs(category)\r\n        .then(gifs => setState({\r\n            gifs: gifs,\r\n            loading: false\r\n            })\r\n        )\r\n        \r\n    },[category])//si cambia la categoría se dispara nuevamente\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    const addCategory = (newCategory) =>{\r\n        setCategories([newCategory,...categories]);\r\n    }\r\n\r\n    return (<>\r\n        <h2>GifExpertApp</h2>\r\n        <hr></hr>   \r\n        <AddCategory addCategory = {addCategory}/>      \r\n        <ol>\r\n            {\r\n                categories.map((category) =>(\r\n                    <GifGrid \r\n                    key = {category}\r\n                    category = {category}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}